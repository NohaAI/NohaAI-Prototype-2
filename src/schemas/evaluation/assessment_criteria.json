{
  "assessment": [
    {
      "criterion": {
        "name": "Are the assumptions clarified?",
        "weight": 10.0,
        "score": 0.0,
        "subcriterion": [
          {
            "name": "If the candidate explicitly clarifies technical assumptions of basic difficulty (weak subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "If the candidate explicitly clarifies technical assumptions of moderate difficulty (moderate subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "If the candidate explicitly clarifies technical assumptions of high difficulty (strong subcriterion)",
            "weight": 10.0,
            "score": 0.0
          }
        ]
      }
    },
    {
      "criterion": {
        "name": "Does the candidate account for corner cases?",
        "weight": 10.0,
        "score": 0.0,
        "subcriterion": [
          {
            "name": "If the candidate explicitly clarifies corner cases of basic difficulty (weak subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "If the candidate explicitly clarifies corner cases of moderate difficulty (moderate subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "If the candidate explicitly clarifies corner cases of high difficulty (strong subcriterion)",
            "weight": 10.0,
            "score": 0.0
          }
        ]
      }
    },
    {
      "criterion": {
        "name": "Does the candidate choose the appropriate data structure for the problem?",
        "weight": 10.0,
        "score": 0.0,
        "subcriterion": [
          {
            "name": "The candidate proposes an unsuitable data structure (weak subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "The candidate proposes a working yet suboptimal data structure (moderate subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "The candidate proposes an optimal data structure (strong subcriterion)",
            "weight": 10.0,
            "score": 0.0
          }
        ]
      }
    },
    {
      "criterion": {
        "name": "Does the candidate select a suitable algorithm for the task?",
        "weight": 10.0,
        "score": 0.0,
        "subcriterion": [
          {
            "name": "The candidate proposes a suboptimal algorithm (weak subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "The candidate improves over the algorithm proposed earlier (moderate subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "The candidate proposes the most optimal algorithm (strong subcriterion)",
            "weight": 10.0,
            "score": 0.0
          }
        ]
      }
    },
    {
      "criterion": {
        "name": "Does the solution proposed by the candidate have optimal time complexity?",
        "weight": 10.0,
        "score": 0.0,
        "subcriterion": [
          {
            "name": "The candidate proposes an algorithm with a worst-case time complexity (weak subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "The candidate proposes an algorithm with an average-case time complexity (moderate subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "The candidate proposes an algorithm with a best-case time complexity (strong subcriterion)",
            "weight": 10.0,
            "score": 0.0
          }
        ]
      }
    },
    {
      "criterion": {
        "name": "Does the solution proposed by the candidate have optimal space complexity?",
        "weight": 10.0,
        "score": 0.0,
        "subcriterion": [
          {
            "name": "The candidate proposes an algorithm with a worst-case space complexity (weak subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "The candidate proposes an algorithm with an average-case space complexity (moderate subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "The candidate proposes an algorithm with a best-case space complexity (strong subcriterion)",
            "weight": 10.0,
            "score": 0.0
          }
        ]
      }
    },
    {
      "criterion": {
        "name": "Technical Communication",
        "weight": 10.0,
        "score": 0.0,
        "subcriterion": [
          {
            "name": "The candidate provides solution without any articulation or thought (weak subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "The candidate provides a solution with scattered thoughts (moderate subcriterion)",
            "weight": 10.0,
            "score": 0.0
          },
          {
            "name": "The candidate provides a solution with a structured approach and a clear chain of thought (strong subcriterion)",
            "weight": 10.0,
            "score": 0.0
          }
        ]
      }
    },
    {
      "criterion": {
      "name": "Generalization",
      "weight": 10.0,
      "score": 0.0,
      "subcriterion": [
        {
          "name": "If the candidate explicitly clarifies generalization of basic difficulty (weak subcriterion)",
          "weight": 10.0,
          "score": 0.0
        },
        {
          "name": "If the candidate explicitly clarifies generalization of moderate difficulty (moderate subcriterion)",
          "weight": 10.0,
          "score": 0.0
        },
        {
          "name": "If the candidate explicitly clarifies generalization of high difficulty (strong subcriterion)",
          "weight": 10.0,
          "score": 0.0
        }
      ]
    }
    }
  ],
  "criteria_scores": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
  "final_score": 0.0
}